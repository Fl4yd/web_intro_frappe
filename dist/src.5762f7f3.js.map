{"version":3,"sources":["../src/js/chart.js","../node_modules/style-inject/dist/style-inject.es.js","../src/js/utils/dom.js","../src/js/utils/constants.js","../src/js/utils/helpers.js","../src/js/utils/draw-utils.js","../src/js/utils/colors.js","../src/js/utils/draw.js","../src/js/utils/animate.js","../src/js/utils/animation.js","../src/js/utils/export.js","../src/js/utils/date-utils.js","../src/js/objects/ChartComponents.js","../src/js/utils/intervals.js","../src/js/utils/axis-chart-utils.js","../src/js/objects/SvgTip.js","../src/css/chartsCss.js","../src/js/charts/BaseChart.js","../src/js/charts/AggregationChart.js","../src/js/charts/PercentageChart.js","../src/js/charts/PieChart.js","../src/js/charts/Heatmap.js","../src/js/charts/AxisChart.js","../src/js/charts/DonutChart.js","src/index.js"],"names":["options","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","$","expr","con","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isHidden","el","offsetParent","isElementInViewport","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","properties","evt","createEvent","j","initEvent","dispatchEvent","getTopOffset","m","titleHeight","margins","paddings","getLeftOffset","getExtraHeight","legendHeight","getExtraWidth","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","isValidNumber","candidate","nonNegative","Number","isNaN","isFinite","round","deepClone","cloned","value","key","Date","getTime","isArray","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","truncateString","txt","len","slice","shortenLargeNumber","label","number","p","floor","log10","l","shortened","pow","getSplineCurvePointsStr","xList","yList","points","i","push","controlPoint","current","previous","next","reverse","o","pointA","pointB","lengthX","lengthY","sqrt","atan2","line","PI","reduce","acc","point","a","cps","cpe","command","limitColor","r","lightenDarkenColor","color","amt","col","getColor","usePound","num","parseInt","b","toString","isValidColor","test","createSVG","tag","createElementNS","val","parentNode","keys","map","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","transform","args","inside","makePath","pathStr","makeArcPathStr","startPosition","endPosition","center","clockWise","largeArc","arcStartX","x","arcStartY","arcEndX","arcEndY","makeCircleStr","midArc","makeArcStrokePathStr","makeStrokeCircleStr","makeGradient","lighter","gradientDef","opacities","percentageBar","depth","PERCENTAGE_BAR_DEFAULT_DEPTH","heatSquare","size","data","legendBar","LABEL_MAX_CHARS","text","FONT_SIZE","FONT_FILL","group","legendDot","makeText","content","fontSize","dy","textAnchor","makeVertLine","y1","y2","stroke","BASE_LINE_COLOR","LABEL_MARGIN","makeHoriLine","x1","x2","lineType","shortenNumbers","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelPos","labelSvg","yRegion","region","datasetBar","index","meta","minHeight","datasetDot","dot","getPaths","pointsStr","join","spline","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","translate","unit","oldCoord","newCoord","duration","old","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","split","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","animPath","PATH_ANIM_DUR","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","downloadFile","filename","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","prepareForExport","svg","clone","classList","add","styleEl","create","CSSTEXT","container","innerHTML","treatAsUtc","date","result","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","getDaysBetween","NO_OF_DAYS_IN_WEEK","millisecondsPerDay","SEC_IN_DAY","NO_OF_MILLIS","areInSameMonth","getMonthName","short","monthName","MONTH_NAMES","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","getComponent","name","constants","getData","Object","componentConfigs","filter","includes","k","config","assign","ChartComponent","normalize","mantissa","exponent","sig","exp","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","getClosestInArray","goal","arr","closest","prev","curr","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedSpace","allowedLetters","DEFAULT_CHAR_WIDTH","seriesMultiple","maxLabelLength","getChartByType","AxisChart","chartTypes","error","BASE_MEASURES","INIT_CHART_UPDATE_TIMEOUT","CHART_POST_ANIMATE_TIMEOUT","DEFAULT_AXIS_CHART_TYPE","AXIS_LEGEND_BAR_SIZE","BAR_CHART_SPACE_RATIO","MIN_BAR_PERCENT_HEIGHT","LINE_CHART_DOT_SIZE","DOT_OVERLAY_SIZE_INCR","PERCENTAGE_BAR_DEFAULT_HEIGHT","HEATMAP_DISTRIBUTION_SIZE","HEATMAP_SQUARE_SIZE","HEATMAP_GUTTER_SIZE","TOOLTIP_POINTER_TRIANGLE_HEIGHT","DEFAULT_CHART_COLORS","HEATMAP_COLORS_GREEN","DEFAULT_COLORS","FULL_ANGLE","SvgTip","colors","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","this","hideTip","title","dataPointList","addEventListener","set","_this2","formatted","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","PRESET_COLOR_MAP","exec","c","ch","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","BaseChart","HTMLElement","Error","rawChartArgs","prepareData","prepareFirstData","validateColors","isNavigable","animate","truncateLegends","measures","JSON","parse","stringify","setMeasures","showLegend","argHeight","baseHeight","state","initTimeout","overlays","configure","validColors","forEach","warn","boundDrawFn","_this","draw","ResizeObserver","resizeObserver","observe","disconnect","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","calc","makeChartArea","setupComponents","components","drawArea","render","update","renderLegend","setupNavigation","baseWidth","titleEL","titleFontSize","legendArea","updateTipOffset","Map","make","updateNav","bindUnits","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","chartSvg","AggregationChart","formatTooltipY","tooltipOptions","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","sumOfRemaining","grandTotal","textContent","legendTotals","barWidth","divisor","_this3","NO_OF_YEAR_MONTHS","DAY_NAMES_SHORT","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","sliceStrings","strokeWidth","transition","newData","xPositions","widths","barHeight","barDepth","positions","position","newPos","newLabels","oldPos","oldLabels","calcLabels","_this5","newOptions","startPos","endPos","_this6","newStarts","oldStarts","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","toUpperCase","yyyyMmDd","dataValue","square","unitType","units","yPositions","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PercentageChart","barOptions","component","xPos","bars","get","gOff","pOff","formattedLabels","fraction","setValues","showTip","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","COL_WIDTH","ROW_HEIGHT","Heatmap","countLabel","validStarts","startSubDomain","startSubDomainIndex","discreteDomains","spacing","noOfWeeks","setFullYear","dataPoints","timestampSec","firstWeekStart","domainConfigs","getDomains","lessCol","dayName","dayText","daySquares","comp","daySquare","dateParts","lessText","moreText","startMonth","startYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","empty","currentDate","currentDateWithinData","getSubDomainConfig","lineOptions","axisOptions","xAxisMode","yAxisMode","xIsSeries","shortenYAxisNumbers","formatTooltipX","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","xAxis","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","replace","char","stacked","yExtremes","cumulativeYPos","cumulative","allValueLists","barDatasets","lineDatasets","barsConfigs","spaceRatio","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","dataByIndex","formatX","formatY","relX","relY","mapTooltipXPosition","dbi","yExtreme","formattedLabel","overlayGuides","g","undefined","currentIndex","currentUnit","_this7","setCurrentDataPoint","_this9","_this10","getDataPoint","datasetValues","splice","DonutChart","Chart","require","_frappeChartsMin","_typeof","obj","Symbol","iterator","constructor","prototype","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","arguments","apply","jsonQuery","query","code","selection","response","format","_ref","_callee","city","cities_data","res","_callee$","_context","getCities","console","log","fetch","headers","ok","json","_x","_ref2","_callee2","texts","ids","_callee2$","_context2","variables","valueTexts","idx","toLowerCase","buildChart","_ref3","_callee3","data1","data_values","label_names","data_SSS","_callee3$","_context3","dimension","Vuosi","category","frappe","_x2","submit_button","getElementById","onclick"],"mappings":"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","file":"src.5762f7f3.js","sourceRoot":"..","sourcesContent":["import '../css/charts.scss';\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\nimport DonutChart from './charts/DonutChart';\n\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nexport function isHidden(el) {\n\treturn (el.offsetParent === null);\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n\tif(!nodeList) return;\n\tfor (var i = 0; i < nodeList.length; i++) {\n\t\tcallback.call(scope, nodeList[i], i);\n\t}\n}\n\nexport function activate($parent, $child, commonClass, activeClass='active', index = -1) {\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n\tforEachNode($children, (node, i) => {\n\t\tif(index >= 0 && i <= index) return;\n\t\tnode.classList.remove(activeClass);\n\t});\n\n\t$child.classList.add(activeClass);\n}\n","export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nexport function getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nexport function getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nexport function getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nexport function getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const AXIS_LEGEND_BAR_SIZE = 100;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\nexport const PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\n\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n","import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\n// https://stackoverflow.com/a/29325222\nexport function getRandomBias(min, max, bias, influence) {\n\tconst range = max - min;\n\tconst biasValue = range * bias + min;\n\tvar rnd = Math.random() * range + min,\t\t// random in range\n\t\tmix = Math.random() * influence;\t\t// random mixer\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nexport function isValidNumber(candidate, nonNegative=false) {\n\tif (Number.isNaN(candidate)) return false;\n\telse if (candidate === undefined) return false;\n\telse if (!Number.isFinite(candidate)) return false;\n\telse if (nonNegative && candidate < 0) return false;\n\telse return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nexport function round(d) {\n\t// https://floating-point-gui.de/\n\t// https://www.jacklmoore.com/notes/rounding-in-javascript/\n\treturn Number(Math.round(d + 'e4') + 'e-4');\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\n export function deepClone(candidate) {\n\tlet cloned, value, key;\n  \n\tif (candidate instanceof Date) {\n\t  return new Date(candidate.getTime());\n\t}\n  \n\tif (typeof candidate !== \"object\" || candidate === null) {\n\t  return candidate;\n\t}\n  \n\tcloned = Array.isArray(candidate) ? [] : {};\n  \n\tfor (key in candidate) {\n\t  value = candidate[key];\n  \n\t  cloned[key] = deepClone(value);\n\t}\n  \n\treturn cloned;\n  }","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nexport function truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len-3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nexport function shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet\tl = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened*100)/100 + ' ' + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by François Romain)\nexport function getSplineCurvePointsStr(xList, yList) {\n\n\tlet points=[];\n\tfor(let i=0;i<xList.length;i++){\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n    \n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n    \n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n    \n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n    \n\treturn pointStr(points, bezierCommand);\n}\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/32685393\n\tlet HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n\tlet RGB_RE = /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n\treturn HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nexport const getColor = (color) => {\n\t// When RGB color, convert to hexadecimal (alpha value is omitted)\n\tif((/rgb[a]{0,1}\\([\\d, ]+\\)/gim).test(color)) {\n\t\treturn (/\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim).exec(color)\n\t\t\t.map((x, i) => (i !== 0 ? Number(x).toString(16) : '#'))\n\t\t\t.reduce((c, ch) => `${c}${ch}`);\n\t}\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import { getBarHeightAndYAttr, truncateString, shortenLargeNumber, getSplineCurvePointsStr } from './draw-utils';\nimport { getStringWidth, isValidNumber } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR, PERCENTAGE_BAR_DEFAULT_DEPTH } from './constants';\nimport { lightenDarkenColor } from './colors';\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 15;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst FONT_FILL = '#555b51';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(className, transform='', parent=undefined) {\n\tlet args = {\n\t\tclassName: className,\n\t\ttransform: transform\n\t};\n\tif(parent) args.inside = parent;\n\treturn createSVG('g', args);\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none', strokeWidth=2) {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill,\n\t\t\t'stroke-width': strokeWidth\n\t\t}\n\t});\n}\n\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function percentageBar(x, y, width, height,\n\tdepth=PERCENTAGE_BAR_DEFAULT_DEPTH, fill='none') {\n\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill,\n\t\tstyles: {\n\t\t\t'stroke': lightenDarkenColor(fill, -25),\n\t\t\t// Diabolically good: https://stackoverflow.com/a/9000859\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n\t\t\t'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\n\t\t\t'stroke-width': depth\n\t\t},\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function heatSquare(className, x, y, size, radius, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function legendBar(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-bar',\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: size,\n\t\theight: '2px',\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE * 2) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function legendDot(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-dot',\n\t\tcx: 0,\n\t\tcy: 0,\n\t\tr: size,\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdx: (FONT_SIZE) + 'px',\n\t\tdy: (FONT_SIZE/3) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"circle\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function makeText(className, x, y, content, options = {}) {\n\tlet fontSize = options.fontSize || FONT_SIZE;\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\n\tlet fill = options.fill || FONT_FILL;\n\tlet textAnchor = options.textAnchor || 'start';\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: dy + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tfill: fill,\n\t\t'text-anchor': textAnchor,\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tif (options.shortenNumbers) label = shortenLargeNumber(label);\n\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType,\n\t\tshortenNumbers: options.shortenNumbers\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif (!isValidNumber(x)) x = 0;\n\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label, options={}) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tif(height === 0) {\n\t\theight = meta.minHeight;\n\t\ty -= meta.minHeight;\n\t}\n\n\t// Preprocess numbers to avoid svg building errors\n\tif (!isValidNumber(x)) x = 0;\n\tif (!isValidNumber(y)) y = 0;\n\tif (!isValidNumber(height, true)) height = 0;\n\tif (!isValidNumber(width, true)) width = 0;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label='', index=0) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\n\t// Spline\n\tif (options.spline)\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\n\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n","import { getBarHeightAndYAttr, getSplineCurvePointsStr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, {d:\"M\" + pointsStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pointsStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\t\t\n\t\tif (parent) {\n\t\t\tparent.replaceChild(animElement, unit);\n\t\t}\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tif (animElement[1]) {\n\t\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\t\telements[i][0] = newElements[i];\n\t\t}\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { $ } from '../utils/dom';\nimport { CSSTEXT } from '../../css/chartsCss';\n\nexport function downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function(){\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nexport function prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n","// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport const DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nexport const DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\t\"Thursday\", \"Friday\", \"Saturday\"];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm>9 ? '' : '0') + mm,\n\t\t(dd>9 ? '' : '0') + dd\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime()/NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif(roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nexport function getMonthName(i, short=false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth (month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif(day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n","import { makeSVGGroup } from '../utils/draw';\nimport { makeText, makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr } from '../utils/animate';\nimport { getMonthName } from '../utils/date-utils';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\treturn data.xPositions.map((x, i) =>{\n\t\t\t\tlet y = 0;\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos, shortenNumbers: this.constants.shortenNumbers})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{labelPos: m.options.labelPos, mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet {index, colWidth, rowHeight, squareSize, radius, xTranslate} = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif(weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif(day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill,\n\t\t\t\t\t\tspline: c.spline\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.reverse().map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function isInRange(val, min, max) {\n\treturn val > min && val < max;\n}\n\nexport function isInRange2D(coord, minCoord, maxCoord) {\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\n}\n\nexport function getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","import { fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t\td.values = vals;\n\t\t}\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tif(allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif(isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength/allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(i % seriesMultiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n","import { $ } from '../utils/dom';\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth, isHidden } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\nimport { BASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS} from '../utils/constants';\nimport { getColor, isValidColor } from '../utils/colors';\nimport { runSMILAnimation } from '../utils/animation';\nimport { downloadFile, prepareForExport } from '../utils/export';\nimport { deepClone } from  '../utils/helpers';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\t\t// deepclone options to avoid making changes to orignal object\n\t\toptions = deepClone(options);\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1, // calculate\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif(!this.title.length) { m.titleHeight = 0; }\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif(!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\tif (ResizeObserver) {\n\t\t\tthis.resizeObserver = new ResizeObserver(this.boundDrawFn);\n\t\t\tthis.resizeObserver.observe(this.parent);\n\t\t}\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\tif (this.resizeObserver) this.resizeObserver.disconnect();\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif(this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tif (onlyWidthChange && isHidden(this.parent)) {\n\t\t\t// Don't update anything if the chart is hidden\n\t\t\treturn;\n\t\t}\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() {} // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif(this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, this.config.animate);\n\t\tthis.renderLegend();\n\t}\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { truncateString } from '../utils/draw-utils';\nimport { legendDot } from '../utils/draw';\nimport { round } from '../utils/helpers';\nimport { getExtraWidth } from '../utils/constants';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(round(d[0]));\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\tlet count = 0;\n\t\tlet y = 0;\n\t\tthis.legendTotals.map((d, i) => {\n\t\t\tlet barWidth = 150;\n\t\t\tlet divisor = Math.floor(\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\n\t\t\t);\n\t\t\tif (this.legendTotals.length < divisor) {\n\t\t\t\tbarWidth = this.width/this.legendTotals.length;\n\t\t\t}\n\t\t\tif(count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += 20;\n\t\t\t}\n\t\t\tlet x = barWidth * count + 5;\n\t\t\tlet label = this.config.truncateLegends ? truncateString(s.labels[i], barWidth/10) : s.labels[i];\n\t\t\tlet formatted = this.config.formatTooltipY ? this.config.formatTooltipY(d) : d;\n\t\t\tlet dot = legendDot(\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t5,\n\t\t\t\tthis.colors[i],\n\t\t\t\t`${label}: ${formatted}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getOffset } from '../utils/dom';\nimport { getComponent } from '../objects/ChartComponents';\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, PERCENTAGE_BAR_DEFAULT_DEPTH } from '../utils/constants';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\n\n\t\tm.paddings.right = 30;\n\t\tm.legendHeight = 60;\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t\tbarDepth: this.barOptions.depth,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif(bars.includes(bar)) {\n\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr, makeCircleStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeCircleStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\n\t\t\t\t\t: makeArcPathStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeText, heatSquare } from '../utils/draw';\nimport { DAY_NAMES_SHORT, addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { getExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE } from '../utils/constants';\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH/2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif(daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH/2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH/4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor(var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate='') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { AXIS_LEGEND_BAR_SIZE } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay, legendBar } from '../utils/draw';\nimport { getTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\n\tLINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif(this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n\t\tsuper.configure(options);\n\n\t\toptions.axisOptions = options.axisOptions || {};\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n\t\tthis.config.shortenYAxisNumbers = options.axisOptions.shortenYAxisNumbers || 0;\n\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name && d.name.replace(/<|>|&/g, (char) => char == '&' ? '&amp;' : char == '<' ? '&lt;' : '&gt;'),\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif(this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tshortenNumbers: this.config.shortenYAxisNumbers\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.config.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\tspline: this.lineOptions.spline,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: minLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif(relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY >  getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tlet dbi = this.dataByIndex[index];\n\n\t\t\tthis.tip.setValues(\n\t\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t\t{name: dbi.formattedLabel, value: ''},\n\t\t\t\tdbi.values,\n\t\t\t\tindex\n\t\t\t);\n\n\t\t\tthis.tip.showTip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif(s.datasets.length > 1) {\n\t\t\tthis.legendArea.textContent = '';\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\n\t\t\t\t// let multiplier = s.datasets.length - i;\n\t\t\t\tlet rect = legendBar(\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\n\t\t\t\t\tbarWidth * i,\n\t\t\t\t\t'0',\n\t\t\t\t\tbarWidth,\n\t\t\t\t\tthis.colors[i],\n\t\t\t\t\td.name,\n\t\t\t\t\tthis.config.truncateLegends);\n\t\t\t\tthis.legendArea.appendChild(rect);\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcStrokePathStr, makeStrokeCircleStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class DonutChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'donut';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius =\n\t\t\tthis.height > this.width\n\t\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t\t: this.center.y - this.strokeWidth / 2;\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeStrokeCircleStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc)\n\t\t\t\t\t: makeArcStrokePathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'donutSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{ radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.stroke = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('donutSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import \"./styles.css\";\nimport { Chart } from \"frappe-charts/dist/frappe-charts.min.esm\";\nconst jsonQuery = {\n  query: [\n    {\n      code: \"Vuosi\",\n      selection: {\n        filter: \"item\",\n        values: [\n          \"2000\",\n          \"2001\",\n          \"2002\",\n          \"2003\",\n          \"2004\",\n          \"2005\",\n          \"2006\",\n          \"2007\",\n          \"2008\",\n          \"2009\",\n          \"2010\",\n          \"2011\",\n          \"2012\",\n          \"2013\",\n          \"2014\",\n          \"2015\",\n          \"2016\",\n          \"2017\",\n          \"2018\",\n          \"2019\",\n          \"2020\",\n          \"2021\"\n        ]\n      }\n    },\n    {\n      code: \"Alue\",\n      selection: {\n        filter: \"item\",\n        values: [/*\"SSS\"*/]\n      }\n    },\n    {\n      code: \"Tiedot\",\n      selection: {\n        filter: \"item\",\n        values: [\"vaesto\"]\n      }\n    }\n  ],\n  response: {\n    format: \"json-stat2\"\n  }\n};\n\nconst getData = async (city) => {\n  const cities_data = await getCities();\n  const url =\n    \"https://statfin.stat.fi/PxWeb/api/v1/en/StatFin/synt/statfin_synt_pxt_12dy.px\";\n  console.log(cities_data)\n  console.log(city)\n    if (city in cities_data) {\n    //jsonQuery.query[1].selection.values.push(cities_data[city])\n    jsonQuery.query[1].selection.values = [(cities_data[city])];\n    console.log(\"City found!\")\n  }else {\n    console.log(\"City not found!\")\n  }\n  const res = await fetch(url, {\n    method: \"POST\",\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(jsonQuery)\n  });\n  if (!res.ok) {\n    return;\n  }\n  const data = await res.json();\n  console.log(data)\n  return data;\n};\n\nconst getCities = async () => {\n  const url = \"https://statfin.stat.fi/PxWeb/api/v1/en/StatFin/synt/statfin_synt_pxt_12dy.px\"\n  const res = await fetch(url);\n  const data = await res.json();\n  const obj = {};\n  const texts = data.variables[1].valueTexts;\n  const ids = data.variables[1].values;\n  texts.map((key, idx) => {\n    obj[key.toLowerCase()] = ids[idx];\n  })\n  return obj;\n}\n\nconst buildChart = async (city) => {\n  const data1 = await getData(city);\n  const data_values = data1.value\n  const label_names = Object.values(data1.dimension.Vuosi.category.label)\n  let data_SSS = [];\n  if (data_values.length == 0) {\n    data_SSS = [0, 0, 0,0, 0, 0,0, 0, 0,0, 0, 0,0, 0, 0,0, 0, 0,0, 0, 0, 0];\n  }else {\n    data_SSS = data_values;\n  }\n  let data_Other = [];\n  /*\n  for(let idx = 0;idx < data_values.length;idx++) {\n    if (idx % 2 == 0) {\n      data_SSS.push(data_values[idx])\n    }else {\n      data_Other.push(data_values[idx])\n    }\n  }*/\n  const data = {\n    labels: label_names,\n    datasets: [\n      {\n        name: \"Whole country\",\n        type: \"line\",\n        values: data_SSS\n      }/*,\n      {\n        name: \"Akaa\",\n        type: \"line\",\n        values: data_Other\n      }*/\n    ]\n  };\n  console.log(data)\n  const chart = new frappe.Chart(\"#chart\", {\n    // or a DOM element,\n    // new Chart() in case of ES6 module with above usage\n    title: \"Municipality chart\",\n    data: data,\n    type: \"line\", // or 'bar', 'line', 'scatter', 'pie', 'percentage'\n    height: 450,\n  });\n};\nconst submit_button = document.getElementById('submit-data');\nsubmit_button.onclick = () => {\n  const text_field = document.getElementById('input-area');\n  const city = text_field.value.toLowerCase();\n  buildChart(city);\n}\n"]}